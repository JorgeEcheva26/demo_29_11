northbound:
  ip: 192.168.24.139
  port: 3000
  opencapif_sdk_configuration:
    capif_host: "capif-prev.mobilesandbox.cloud"
    register_host: "registercapif-prev.mobilesandbox.cloud"
    capif_https_port: "36212"
    capif_register_port: "36211"
    capif_username: "echeva_0"
    capif_password: "echevapass"
    debug_mode: "True"
    provider:
      cert_generation:
        csr_common_name: "RISComponent_provider"
        csr_organizational_unit: "discovery"
        csr_organization: "telefonica"
        csr_locality: "madrid"
        csr_state_or_province_name: "madrid"
        csr_country_name: "ES"
        csr_email_address: "jorge.echevarriauribarri.practicas@telefonica.es"
      supported_features: "0"
      apiSuppFeats: "0"
  openapi:
    openapi: 3.0.0
    info:
      title: RIS Sandbox API
      version: 5.0
      description: API for configuring and controlling the RIS component.
    paths:
      /api/set_codebook:
        post:
          summary: Creates a set of custom profiles for the RIS.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    ip_address:
                      type: string
                      description: IP address of RIS
                    f0:
                      type: number
                      format: float
                      description: Frequency (GHz)
                      minimum: 26.5
                      maximum: 29.5
                    dist:
                      type: number
                      format: float
                      description: Distance (m)
                      minimum: 0
                    phi_t:
                      type: number
                      format: float
                      description: Incident angle azimuth (degrees)
                      minimum: 0
                      maximum: 360
                    theta_t:
                      type: number
                      format: float
                      description: Incident angle polar (degrees)
                      minimum: 0
                      maximum: 90
                    num_phi_r:
                      type: integer
                      description: Number of azimuth segments
                      minimum: 1
                    phi_r_low:
                      type: number
                      format: float
                      description: Receiver azimuth low (degrees)
                      minimum: 0
                      maximum: 360
                    phi_r_high:
                      type: number
                      format: float
                      description: Receiver azimuth high (degrees)
                      minimum: 0
                      maximum: 360
                    num_theta_r:
                      type: integer
                      description: Number of polar segments
                      minimum: 1
                    theta_r_low:
                      type: number
                      format: float
                      description: Receiver polar low (degrees)
                      minimum: 0
                      maximum: 90
                    theta_r_high:
                      type: number
                      format: float
                      description: Receiver polar high (degrees)
                      minimum: 0
                      maximum: 90
          responses:
            '200':
              description: Code book created successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

      /api/apply_dual_pol_ris_profile:
        post:
          summary: Applies a dual-polarization profile to the RIS.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    ip_address:
                      type: string
                      description: IP address of RIS
                    vert_profile_id:
                      type: integer
                      description: Profile ID for vertical polarization
                      minimum: 0
                      maximum: 999
                    horz_profile_id:
                      type: integer
                      description: Profile ID for horizontal polarization
                      minimum: 0
                      maximum: 999
          responses:
            '200':
              description: Profiles applied successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

      /api/apply_ris_profile:
        post:
          summary: Applies a profile to the RIS.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    ip_address:
                      type: string
                      description: IP address of RIS
                    profile_id:
                      type: integer
                      description: Profile ID
                      minimum: 0
                      maximum: 999
          responses:
            '200':
              description: Profile applied successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

      /api/get_ris_info:
        get:
          summary: Retrieves RIS information and status.
          responses:
            '200':
              description: RIS information retrieved successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string

